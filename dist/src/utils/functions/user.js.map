{"version":3,"file":"user.js","sourceRoot":"","sources":["../../../../src/utils/functions/user.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { CurrentUser } from \"../../types/user\"\nimport firebase from \"../../firebase/config\"\nconst db = firebase.firestore()\n\nexport const getUser = (uid: string) => {\n  console.log(uid)\n  const user = db\n    .collection(\"user\")\n    .doc(uid)\n    .get()\n    .then(doc => {\n      if (doc.exists) {\n        return doc.data()\n      } else {\n        return \"\"\n      }\n    })\n  return user\n}\n\nexport const getCurrentUser = () => {\n  const currentUserData = localStorage.getItem(\"user\")\n  const currentUser: CurrentUser = currentUserData\n    ? JSON.parse(currentUserData)\n    : \"\"\n  return currentUser\n}\n\nexport const register = async (\n  email: string,\n  password: string,\n  displayName: string,\n  photoURL: string\n) => {\n  const user = await getUser(email)\n  if (user) {\n    console.log(\"ユーザーが存在しています\")\n    return\n  }\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(async result => {\n      await result.user.updateProfile({\n        displayName,\n        photoURL\n      })\n      await setUser()\n    })\n    .catch(error => {\n      console.log(\"error\")\n    })\n  //emailAuthMixin_sendVerifyMail()\n}\n\nexport const login = (email: string, password: string) => {\n  console.log(email, password)\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code\n      var errorMessage = error.message\n      // ...\n    })\n  setUser()\n}\n\nexport const logout = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(\n      () => {\n        // ログイン画面に戻る等\n        console.log(\"ログアウトしました\")\n        deleteLocalStrage(\"user\")\n      },\n      err => {\n        // エラーを表示する等\n        console.log(`ログアウト時にエラーが発生しました (${err})`)\n      }\n    )\n}\n\n//private\nconst setLocalStrage = (user: CurrentUser) => {\n  localStorage.setItem(\"user\", JSON.stringify(user))\n}\n\nconst deleteLocalStrage = (key: string) => {\n  localStorage.removeItem(key)\n}\n\nconst setUser = () => {\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      console.log(user)\n      // User is signed in.\n      const { uid, displayName, email, photoURL } = user\n      const currentUser: CurrentUser = {\n        uid,\n        displayName,\n        email,\n        photoURL\n      }\n      setLocalStrage(currentUser)\n    } else {\n      console.log(\"not login\")\n    }\n  })\n}\n\n//not use\nexport const emailAuthMixin_sendVerifyMail = () => {\n  const currentUser = firebase.auth().currentUser\n  if (!currentUser.emailVerified) {\n    currentUser\n      .sendEmailVerification()\n      .then(() => {\n        console.log(\"送信しました！\")\n      })\n      .catch(error => {\n        // 失敗した際の処理\n      })\n  }\n}\n"]}