{"version":3,"file":"favorite.js","sourceRoot":"","sources":["../../../../src/utils/functions/favorite.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\"\nimport firebase from \"../../firebase/config\"\nconst db = firebase.firestore()\nimport { Favorite } from \"../../types/favorite\"\n\nexport const getFavorite = (userId?: string, summaryId?: string) => {\n  if (!userId) return\n  if (!summaryId) return\n  const snapShot = db\n    .collection(\"favorite\")\n    .where(\"user_id\", \"==\", userId)\n    .where(\"summary_id\", \"==\", summaryId)\n    .get()\n    .then(res =>\n      res.docs.map(doc => {\n        return { id: doc.id, ...doc.data() }\n      })\n    )\n  return snapShot\n}\n\nexport const getFavorites = () => {\n  const snapShot = db\n    .collection(\"favorite\")\n    .get()\n    .then(res =>\n      res.docs.map(doc => {\n        return { id: doc.id, ...doc.data() }\n      })\n    )\n\n  return snapShot\n}\n\nexport const getDonefavorite = (id: string) => {\n  const snapShot = db\n    .collection(\"favorite\")\n    .doc(id)\n    .get()\n    .then(doc => {\n      if (doc.exists) {\n        return { id: doc.id, ...doc.data() }\n      } else {\n        console.log(\"404\")\n      }\n    })\n    .catch(error => {\n      console.log(`データを取得できませんでした (${error})`)\n    })\n\n  return snapShot\n}\n\nexport const getfavoriteNum = async (summaryId?: string) => {\n  const snapShot: any = await db\n    .collection(\"favorite\")\n    .where(\"summary_id\", \"==\", summaryId)\n    .get()\n    .then(res =>\n      res.docs.map((doc, _index) => {\n        let i = 1\n        return i + _index\n      })\n    )\n    .catch(error => {\n      console.log(`データを取得できませんでした (${error})`)\n    })\n  const [num] = snapShot\n\n  return num ? num : 0\n}\n\nexport const createFavorite = (values: Favorite) => {\n  const { user_id, summary_id } = values\n  if (!user_id || !summary_id) {\n    console.log(\"idがありません\")\n    return\n  }\n  const snapShot = db\n    .collection(\"favorite\")\n    .add({\n      ...values\n    })\n    .then(res => res.id)\n\n  return snapShot\n}\n\nexport const deleteFavorite = (favoriteId: string) => {\n  if (!favoriteId) {\n    console.log(\"idが存在しません。\")\n    return\n  }\n  const snapShot = db\n    .collection(\"favorite\")\n    .doc(favoriteId)\n    .delete()\n    .then(res => {})\n\n  return snapShot\n}\n"]}